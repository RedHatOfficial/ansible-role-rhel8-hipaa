- name: Configure SELinux Policy
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUXTYPE=
    line: SELINUXTYPE={{ var_selinux_policy_name }}
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - selinux_policytype | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - selinux_policytype
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80868-3
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)(a)
  - NIST-800-53-AU-9
  - NIST-800-53-SC-7(21)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2

- name: Ensure SELinux Not Disabled in /etc/default/grub
  replace:
    dest: /etc/default/grub
    regexp: selinux=0
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - grub2_enable_selinux | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - grub2_enable_selinux
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80827-9
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)(a)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2

- name: Ensure SELinux State is Enforcing
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUX=
    line: SELINUX={{ var_selinux_state }}
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - low_disruption | bool
  - selinux_state | bool
  - low_complexity | bool
  tags:
  - selinux_state
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80869-1
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)(a)
  - NIST-800-53-AU-9
  - NIST-800-53-SC-7(21)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_selinuxuser_execmod | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_execmod
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80950-9

- name: Set SELinux boolean selinuxuser_execmod accordingly
  seboolean:
    name: selinuxuser_execmod
    state: '{{ var_selinuxuser_execmod }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sebool_selinuxuser_execmod | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_execmod
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80950-9

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_selinuxuser_execheap | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_execheap
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80949-1

- name: Set SELinux boolean selinuxuser_execheap accordingly
  seboolean:
    name: selinuxuser_execheap
    state: '{{ var_selinuxuser_execheap }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_selinuxuser_execheap | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_execheap
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80949-1

- name: Ensure libsemanage-python installed
  package:
    name: libsemanage-python
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_selinuxuser_execstack | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_execstack
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80951-7

- name: Set SELinux boolean selinuxuser_execstack accordingly
  seboolean:
    name: selinuxuser_execstack
    state: '{{ var_selinuxuser_execstack }}'
    persistent: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - sebool_selinuxuser_execstack | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sebool_selinuxuser_execstack
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80951-7

- name: Disable service autofs
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service autofs
    systemd:
      name: autofs.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"autofs.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_autofs_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80873-3
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.4.6

- name: Unit Socket Exists - autofs.socket
  command: systemctl list-unit-files autofs.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_autofs_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80873-3
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.4.6

- name: Disable socket autofs
  systemd:
    name: autofs.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"autofs.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_autofs_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80873-3
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.4.6

- name: Ensure kernel module 'usb-storage' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/usb-storage.conf
    regexp: usb-storage
    line: install usb-storage /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - reboot_required | bool
  - low_complexity | bool
  tags:
  - kernel_module_usb-storage_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80835-2
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MP-7
  - NIST-800-171-3.1.21

- name: Ensure sysctl kernel.dmesg_restrict is set to 1
  sysctl:
    name: kernel.dmesg_restrict
    value: '1'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_kernel_dmesg_restrict | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_dmesg_restrict
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80913-7
  - NIST-800-53-SI-11(a)
  - NIST-800-53-SI-11(b)
  - NIST-800-171-3.1.5

- name: Ensure sysctl fs.suid_dumpable is set to 0
  sysctl:
    name: fs.suid_dumpable
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_fs_suid_dumpable | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_fs_suid_dumpable
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80912-9
  - NIST-800-53-SI-11(a)
  - NIST-800-53-SI-11(b)

- name: Ensure sysctl kernel.randomize_va_space is set to 2
  sysctl:
    name: kernel.randomize_va_space
    value: '2'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_kernel_randomize_va_space | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_randomize_va_space
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80916-0
  - NIST-800-53-SC-30
  - NIST-800-53-SC-30(2)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Grep for yum repo section names
  shell: grep -HEr '^\[.+\]' -r /etc/yum.repos.d/
  register: repo_grep_results
  ignore_errors: true
  changed_when: false
  tags:
  - ensure_gpgcheck_never_disabled
  - high_severity
  - enable_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80792-5
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - ensure_gpgcheck_never_disabled | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - enable_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Set gpgcheck=1 for each yum repo
  ini_file:
    path: '{{ item[0] }}'
    section: '{{ item[1] }}'
    option: gpgcheck
    value: '1'
    no_extra_spaces: true
  loop: '{{ repo_grep_results.stdout | regex_findall( ''(.+\.repo):\[(.+)\]\n?'' ) }}'
  tags:
  - ensure_gpgcheck_never_disabled
  - high_severity
  - enable_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80792-5
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - ensure_gpgcheck_never_disabled | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - enable_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Read permission of GPG key directory
  stat:
    path: /etc/pki/rpm-gpg/
  register: gpg_key_directory_permission
  check_mode: false
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80795-8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Read signatures in GPG key
  command: gpg --show-keys --with-fingerprint --with-colons "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
  args:
    warn: false
  changed_when: false
  register: gpg_fingerprints
  check_mode: false
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80795-8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Set Fact - Installed GPG Fingerprints
  set_fact:
    gpg_installed_fingerprints: '{{ gpg_fingerprints.stdout | regex_findall(''^pub.*

      (?:^fpr[:]*)([0-9A-Fa-f]*)'', ''\1'') | list }}'
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80795-8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Set Fact - Valid fingerprints
  set_fact:
    gpg_valid_fingerprints: ("567E347AD0044ADE55BA8A5F199E2F91FD431D51" "6A6AA7C97C8890AEC6AEBFE2F76F66C3D4082792")
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80795-8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Import RedHat GPG key
  rpm_key:
    state: present
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
  when:
  - gpg_key_directory_permission.stat.mode <= '0755'
  - (gpg_installed_fingerprints | difference(gpg_valid_fingerprints)) | length == 0
  - gpg_installed_fingerprints | length > 0
  - ansible_distribution == "RedHat"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80795-8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80791-7
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-171-3.4.8

- name: Ensure GPG check Enabled for Local Packages (Yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Scientific" or yum_config_file.stat.exists)
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80791-7
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-171-3.4.8

- name: Ensure GPG check Enabled for Local Packages (DNF)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80791-7
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-171-3.4.8

- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80790-9
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Ensure GPG check is globally activated (yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: gpgcheck
    value: 1
    no_extra_spaces: true
    create: false
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Scientific" or yum_config_file.stat.exists)
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80790-9
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Ensure GPG check is globally activated (dnf)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: gpgcheck
    value: 1
    no_extra_spaces: true
    create: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80790-9
  - NIST-800-53-CM-5(3)
  - NIST-800-53-SI-7
  - NIST-800-53-SC-12
  - NIST-800-53-SC-12(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-SA-12
  - NIST-800-53-SA-12(10)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-CM-11(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Require Credential Prompting for Remote Access in GNOME3
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/Vino
    option: authentication-methods
    value: '[''vnc'']'
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - dconf_gnome_remote_access_credential_prompt | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_remote_access_credential_prompt
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80772-7
  - NIST-800-171-3.1.12

- name: Prevent user modification of GNOME3 Credential Prompting for Remote Access
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/Vino/authentication-methods
    line: /org/gnome/Vino/authentication-methods
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - dconf_gnome_remote_access_credential_prompt | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_remote_access_credential_prompt
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80772-7
  - NIST-800-171-3.1.12

- name: Require Encryption for Remote Access in GNOME3
  ini_file:
    dest: /etc/dconf/db/local.d/00-security-settings
    section: org/gnome/Vino
    option: require-encryption
    value: 'true'
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - dconf_gnome_remote_access_encryption | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_remote_access_encryption
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80773-5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-171-3.1.13

- name: Prevent user modification of GNOME3 Encryption for Remote Access
  lineinfile:
    path: /etc/dconf/db/local.d/locks/00-security-settings-lock
    regexp: ^/org/gnome/Vino/require-encryption
    line: /org/gnome/Vino/require-encryption
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - dconf_gnome_remote_access_encryption | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - dconf_gnome_remote_access_encryption
  - medium_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80773-5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-171-3.1.13

- name: Configure System Cryptography Policy
  lineinfile:
    path: /etc/crypto-policies/config
    regexp: ^(?!#)(\S+)$
    line: '{{ var_system_crypto_policy }}'
    create: true
  tags:
  - configure_crypto_policy
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80935-0
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MA-4(6)
  - NIST-800-53-SC-13
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - configure_crypto_policy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Verify that Crypto Policy is Set (runtime)
  command: /usr/bin/update-crypto-policies --set {{ var_system_crypto_policy }}
  tags:
  - configure_crypto_policy
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80935-0
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MA-4(6)
  - NIST-800-53-SC-13
  - NIST-800-53-SC-12(2)
  - NIST-800-53-SC-12(3)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - configure_crypto_policy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Configure SSH to use System Crypto Policy
  lineinfile:
    dest: /etc/sysconfig/sshd
    state: absent
    regexp: ^\s*CRYPTO_POLICY.*$
  tags:
  - configure_ssh_crypto_policy
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80939-2
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-MA-4(6)
  - NIST-800-53-SC-13
  when:
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - configure_ssh_crypto_policy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Read list of files with incorrect permissions
  command: rpm -Va --nodeps --nosignature --nofiledigest --nosize --nomtime --nordev --nocaps --nolinkto --nouser --nogroup
  args:
    warn: false
  register: files_with_incorrect_permissions
  failed_when: files_with_incorrect_permissions.rc > 1
  changed_when: false
  check_mode: false
  tags:
  - rpm_verify_permissions
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80858-4
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1
  when:
  - high_complexity | bool
  - no_reboot_needed | bool
  - rpm_verify_permissions | bool
  - restrict_strategy | bool
  - high_severity | bool
  - medium_disruption | bool

- name: Create list of packages
  command: rpm -qf "{{ item }}"
  args:
    warn: false
  with_items: '{{ files_with_incorrect_permissions.stdout_lines | map(''regex_findall'', ''^[.]+[M]+.* (\/.*)'', ''\1'') |
    map(''join'') | select(''match'', ''(\/.*)'') | list | unique }}'
  register: list_of_packages
  changed_when: false
  check_mode: false
  when:
  - (files_with_incorrect_permissions.stdout_lines | length > 0)
  - high_complexity | bool
  - no_reboot_needed | bool
  - rpm_verify_permissions | bool
  - restrict_strategy | bool
  - high_severity | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_permissions
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80858-4
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: Correct file permissions with RPM
  command: rpm --setperms '{{ item }}'
  args:
    warn: false
  with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list | unique }}'
  when:
  - (files_with_incorrect_permissions.stdout_lines | length > 0)
  - high_complexity | bool
  - no_reboot_needed | bool
  - rpm_verify_permissions | bool
  - restrict_strategy | bool
  - high_severity | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_permissions
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80858-4
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: 'Set fact: Package manager reinstall command (dnf)'
  set_fact:
    package_manager_reinstall_cmd: dnf reinstall -y
  when:
  - ansible_distribution == "Fedora"
  - high_complexity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_hashes
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80857-6
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: 'Set fact: Package manager reinstall command (yum)'
  set_fact:
    package_manager_reinstall_cmd: yum reinstall -y
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux")
  - high_complexity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_hashes
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80857-6
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: Read files with incorrect hash
  command: rpm -Va --nodeps --nosize --nomtime --nordev --nocaps --nolinkto --nouser --nogroup --nomode --noconfig --noghost
  args:
    warn: false
  register: files_with_incorrect_hash
  changed_when: false
  failed_when: files_with_incorrect_hash.rc > 1
  check_mode: false
  when:
  - (package_manager_reinstall_cmd is defined)
  - high_complexity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_hashes
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80857-6
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: Create list of packages
  command: rpm -qf "{{ item }}"
  args:
    warn: false
  with_items: '{{ files_with_incorrect_hash.stdout_lines | map(''regex_findall'', ''^[.]+[5]+.* (\/.*)'', ''\1'') | map(''join'')
    | select(''match'', ''(\/.*)'') | list | unique }}'
  register: list_of_packages
  changed_when: false
  check_mode: false
  when:
  - files_with_incorrect_hash.stdout_lines is defined
  - (files_with_incorrect_hash.stdout_lines | length > 0)
  - high_complexity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_hashes
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80857-6
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: Reinstall packages of files with incorrect hash
  command: '{{ package_manager_reinstall_cmd }} ''{{ item }}'''
  args:
    warn: false
  with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list | unique }}'
  when:
  - files_with_incorrect_hash.stdout_lines is defined
  - (package_manager_reinstall_cmd is defined and (files_with_incorrect_hash.stdout_lines | length > 0))
  - high_complexity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - rpm_verify_hashes | bool
  - medium_disruption | bool
  tags:
  - rpm_verify_hashes
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80857-6
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-6(c)
  - NIST-800-53-SI-7
  - NIST-800-53-SI-7(1)
  - NIST-800-53-SI-7(6)
  - NIST-800-53-AU-9(3)
  - NIST-800-171-3.3.8
  - NIST-800-171-3.4.1
  - PCI-DSS-Req-11.5
  - CJIS-5.10.4.1

- name: Disable service debug-shell
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service debug-shell
    systemd:
      name: debug-shell.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"debug-shell.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80876-6
  - NIST-800-171-3.4.5

- name: Unit Socket Exists - debug-shell.socket
  command: systemctl list-unit-files debug-shell.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80876-6
  - NIST-800-171-3.4.5

- name: Disable socket debug-shell
  systemd:
    name: debug-shell.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"debug-shell.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80876-6
  - NIST-800-171-3.4.5

- name: Verify that Interactive Boot is Disabled in /etc/default/grub
  replace:
    dest: /etc/default/grub
    regexp: systemd.confirm_spawn=(1|yes|true|on)
    replace: systemd.confirm_spawn=no
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_disable_interactive_boot | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - grub2_disable_interactive_boot
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80826-1
  - NIST-800-53-SC-2(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.4.5

- name: Verify that Interactive Boot is Disabled (runtime)
  command: /sbin/grubby --update-kernel=ALL --remove-args="systemd.confirm_spawn"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_disable_interactive_boot | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - grub2_disable_interactive_boot
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80826-1
  - NIST-800-53-SC-2(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.4.5

- name: Disable Ctrl-Alt-Del Burst Action
  lineinfile:
    dest: /etc/systemd/system.conf
    state: present
    regexp: ^CtrlAltDelBurstAction
    line: CtrlAltDelBurstAction=none
    create: true
  tags:
  - disable_ctrlaltdel_burstaction
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80784-2
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.5
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - disable_ctrlaltdel_burstaction | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: require single user mode password
  lineinfile:
    create: true
    dest: /usr/lib/systemd/system/rescue.service
    regexp: ^#?ExecStart=
    line: ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - require_singleuser_auth | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - require_singleuser_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80855-0
  - NIST-800-53-IA-2
  - NIST-800-53-AC-3
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.4.5

- name: Disable Ctrl-Alt-Del Reboot Activation
  systemd:
    name: ctrl-alt-del.target
    masked: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - disable_ctrlaltdel_reboot | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - disable_ctrlaltdel_reboot
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80785-9
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5

- name: Prevent Log In to Accounts With Empty Password - system-auth
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: nullok
  tags:
  - no_empty_passwords
  - high_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80841-0
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - PCI-DSS-Req-8.2.3
  - CJIS-5.5.2
  when:
  - no_empty_passwords | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Prevent Log In to Accounts With Empty Password - password-auth
  replace:
    dest: /etc/pam.d/password-auth
    follow: true
    regexp: nullok
  tags:
  - no_empty_passwords
  - high_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80841-0
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - PCI-DSS-Req-8.2.3
  - CJIS-5.5.2
  when:
  - no_empty_passwords | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Restrict Serial Port Root Logins
  lineinfile:
    dest: /etc/securetty
    regexp: ttyS[0-9]
    state: absent
  tags:
  - restrict_serial_port_logins
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80856-8
  - NIST-800-53-AC-6
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  when:
  - no_reboot_needed | bool
  - restrict_serial_port_logins | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Test for existence of /etc/securetty
  stat:
    path: /etc/securetty
  register: securetty_empty
  tags:
  - no_direct_root_logins
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80840-2
  - NIST-800-53-IA-2
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.6
  when:
  - no_direct_root_logins | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Direct root Logins Not Allowed
  copy:
    dest: /etc/securetty
    content: ''
  when:
  - securetty_empty.stat.size > 1
  - no_direct_root_logins | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - no_direct_root_logins
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80840-2
  - NIST-800-53-IA-2
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.6

- name: Restrict Virtual Console Root Logins
  lineinfile:
    dest: /etc/securetty
    regexp: ^vc
    state: absent
  tags:
  - securetty_root_login_console_only
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80864-2
  - NIST-800-53-AC-6
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - securetty_root_login_console_only | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_permissions_grub2_cfg | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80814-7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5

- name: Ensure permission 600 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    mode: '600'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_permissions_grub2_cfg | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_permissions_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80814-7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5

- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_grub2_cfg | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80805-5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5
  - PCI-DSS-Req-7.1
  - CJIS-5.5.2.2

- name: Ensure owner 0 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    owner: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - file_owner_grub2_cfg | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_owner_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80805-5
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5
  - PCI-DSS-Req-7.1
  - CJIS-5.5.2.2

- name: Test for existence /boot/grub2/grub.cfg
  stat:
    path: /boot/grub2/grub.cfg
  register: file_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_grub2_cfg | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80800-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5
  - PCI-DSS-Req-7.1
  - CJIS-5.5.2.2

- name: Ensure group owner 0 on /boot/grub2/grub.cfg
  file:
    path: /boot/grub2/grub.cfg
    group: '0'
  when:
  - file_exists.stat is defined and file_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - file_groupowner_grub2_cfg | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - file_groupowner_grub2_cfg
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80800-6
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-6(1)
  - NIST-800-171-3.4.5
  - PCI-DSS-Req-7.1
  - CJIS-5.5.2.2

- name: Set rsyslog remote loghost
  lineinfile:
    dest: /etc/rsyslog.conf
    regexp: ^\*\.\*
    line: '*.* @@{{ rsyslog_remote_loghost_address }}'
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - rsyslog_remote_loghost | bool
  - low_complexity | bool
  tags:
  - rsyslog_remote_loghost
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80863-4
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AU-4(1)
  - NIST-800-53-AU-9(2)

- name: Enable service auditd
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service auditd
    service:
      name: auditd
      enabled: 'yes'
      state: started
    when:
    - '"audit" in ansible_facts.packages'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - high_severity | bool
  - enable_strategy | bool
  - service_auditd_enabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_auditd_enabled
  - high_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80872-5
  - NIST-800-53-AC-2(g)
  - NIST-800-53-AU-3
  - NIST-800-53-AU-10
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.1
  - NIST-800-171-3.3.2
  - NIST-800-171-3.3.6
  - PCI-DSS-Req-10.1
  - CJIS-5.4.1.1

- name: get current kernel parameters
  command: /usr/bin/grub2-editenv - list
  register: kernelopts
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80825-3
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-10
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: Update the bootloader menu
  command: /usr/bin/grub2-editenv - set "{{ item }} audit=1"
  with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') | list }}'
  when:
  - kernelopts.stdout_lines is defined
  - kernelopts.stdout_lines | length > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-80825-3
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-10
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IR-5(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: Set architecture for audit group tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_group
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_group.matched is defined and find_group.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_group.files | map(attribute=''path'') | list | first }}'
  when:
  - find_group.matched is defined and find_group.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the group rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the group rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/group -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_usergroup_modification_group | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_group
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80758-6
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Set architecture for audit shadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_shadow
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_shadow.matched is defined and find_shadow.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_shadow.files | map(attribute=''path'') | list | first }}'
  when:
  - find_shadow.matched is defined and find_shadow.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the shadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the shadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/shadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_shadow | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_shadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80762-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Set architecture for audit passwd tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_passwd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_passwd.matched is defined and find_passwd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_passwd.matched is defined and find_passwd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the passwd rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the passwd rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/passwd -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_usergroup_modification_passwd | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80761-0
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Set architecture for audit opasswd tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80760-2
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_opasswd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80760-2
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_opasswd.matched is defined and find_opasswd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80760-2
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_opasswd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_opasswd.matched is defined and find_opasswd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80760-2
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the opasswd rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80760-2
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the opasswd rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_usergroup_modification_opasswd | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_opasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80760-2
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Set architecture for audit gshadow tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k audit_rules_usergroup_modification$
    patterns: '*.rules'
  register: find_gshadow
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for
    the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_gshadow.matched is defined and find_gshadow.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_gshadow.files | map(attribute=''path'') | list | first }}'
  when:
  - find_gshadow.matched is defined and find_gshadow.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the gshadow rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the gshadow rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /etc/gshadow -p wa -k audit_rules_usergroup_modification
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_usergroup_modification_gshadow | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_usergroup_modification_gshadow
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80759-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/umount.*$
    patterns: '*.rules'
  register: find_umount
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_umount.matched is defined and find_umount.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_umount.files | map(attribute=''path'') | list | first }}'
  when:
  - find_umount.matched is defined and find_umount.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the umount rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the umount rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_umount | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_umount
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80739-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/passwd.*$
    patterns: '*.rules'
  register: find_passwd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80731-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_passwd.matched is defined and find_passwd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80731-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_passwd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_passwd.matched is defined and find_passwd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80731-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the passwd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80731-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the passwd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_passwd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_passwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80731-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/sudoedit.*$
    patterns: '*.rules'
  register: find_sudoedit
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80738-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_sudoedit.matched is defined and find_sudoedit.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80738-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_sudoedit.files | map(attribute=''path'') | list | first }}'
  when:
  - find_sudoedit.matched is defined and find_sudoedit.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80738-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the sudoedit rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80738-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the sudoedit rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudoedit | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudoedit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80738-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/sudo.*$
    patterns: '*.rules'
  register: find_sudo
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80737-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_sudo.matched is defined and find_sudo.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80737-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_sudo.files | map(attribute=''path'') | list | first }}'
  when:
  - find_sudo.matched is defined and find_sudo.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80737-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the sudo rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80737-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the sudo rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_sudo | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_sudo
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80737-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/postqueue.*$
    patterns: '*.rules'
  register: find_postqueue
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_postqueue | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postqueue
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80733-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_postqueue.matched is defined and find_postqueue.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_postqueue | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postqueue
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80733-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_postqueue.files | map(attribute=''path'') | list | first }}'
  when:
  - find_postqueue.matched is defined and find_postqueue.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_postqueue | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postqueue
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80733-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the postqueue rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_postqueue | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postqueue
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80733-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the postqueue rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_postqueue | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postqueue
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80733-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/userhelper.*$
    patterns: '*.rules'
  register: find_userhelper
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80741-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_userhelper.matched is defined and find_userhelper.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80741-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_userhelper.files | map(attribute=''path'') | list | first }}'
  when:
  - find_userhelper.matched is defined and find_userhelper.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80741-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the userhelper rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80741-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the userhelper rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_userhelper | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_userhelper
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80741-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/su.*$
    patterns: '*.rules'
  register: find_su
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80736-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_su.matched is defined and find_su.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80736-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_su.files | map(attribute=''path'') | list | first }}'
  when:
  - find_su.matched is defined and find_su.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80736-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the su rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80736-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the su rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_su | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_su
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80736-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/chsh.*$
    patterns: '*.rules'
  register: find_chsh
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_chsh | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chsh
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80726-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_chsh.matched is defined and find_chsh.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_chsh | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chsh
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80726-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chsh.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chsh.matched is defined and find_chsh.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_chsh | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chsh
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80726-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the chsh rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_chsh | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chsh
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80726-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the chsh rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_chsh | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chsh
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80726-3
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/libexec/openssh/ssh-keysign.*$
    patterns: '*.rules'
  register: find_ssh_keysign
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80735-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_ssh_keysign.matched is defined and find_ssh_keysign.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80735-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_ssh_keysign.files | map(attribute=''path'') | list | first }}'
  when:
  - find_ssh_keysign.matched is defined and find_ssh_keysign.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80735-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the ssh_keysign rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80735-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the ssh_keysign rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_privileged_commands_ssh_keysign | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_ssh_keysign
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80735-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/crontab.*$
    patterns: '*.rules'
  register: find_crontab
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_crontab.matched is defined and find_crontab.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_crontab.files | map(attribute=''path'') | list | first }}'
  when:
  - find_crontab.matched is defined and find_crontab.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the crontab rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the crontab rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_crontab | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_crontab
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80727-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/newgrp.*$
    patterns: '*.rules'
  register: find_newgrp
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_newgrp.matched is defined and find_newgrp.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_newgrp.files | map(attribute=''path'') | list | first }}'
  when:
  - find_newgrp.matched is defined and find_newgrp.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the newgrp rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the newgrp rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_newgrp | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_newgrp
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80729-7
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/postdrop.*$
    patterns: '*.rules'
  register: find_postdrop
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postdrop
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80732-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_postdrop.matched is defined and find_postdrop.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postdrop
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80732-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_postdrop.files | map(attribute=''path'') | list | first }}'
  when:
  - find_postdrop.matched is defined and find_postdrop.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postdrop
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80732-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the postdrop rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postdrop
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80732-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the postdrop rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_privileged_commands_postdrop | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_postdrop
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80732-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/unix_chkpwd.*$
    patterns: '*.rules'
  register: find_unix_chkpwd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80740-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_unix_chkpwd.matched is defined and find_unix_chkpwd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80740-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unix_chkpwd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_unix_chkpwd.matched is defined and find_unix_chkpwd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80740-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the unix_chkpwd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80740-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the unix_chkpwd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_unix_chkpwd | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_unix_chkpwd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80740-4
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/gpasswd.*$
    patterns: '*.rules'
  register: find_gpasswd
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_gpasswd.matched is defined and find_gpasswd.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_gpasswd.files | map(attribute=''path'') | list | first }}'
  when:
  - find_gpasswd.matched is defined and find_gpasswd.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the gpasswd rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the gpasswd rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_privileged_commands_gpasswd | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_gpasswd
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80728-9
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/pam_timestamp_check.*$
    patterns: '*.rules'
  register: find_pam_timestamp_check
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_pam_timestamp_check
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80730-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_pam_timestamp_check.matched is defined and find_pam_timestamp_check.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_pam_timestamp_check
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80730-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_pam_timestamp_check.files | map(attribute=''path'') | list | first }}'
  when:
  - find_pam_timestamp_check.matched is defined and find_pam_timestamp_check.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_pam_timestamp_check
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80730-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the pam_timestamp_check rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/pam_timestamp_check -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_pam_timestamp_check
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80730-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the pam_timestamp_check rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/pam_timestamp_check -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_privileged_commands_pam_timestamp_check | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_pam_timestamp_check
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80730-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/chage.*$
    patterns: '*.rules'
  register: find_chage
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_chage | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80725-5
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_chage.matched is defined and find_chage.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_chage | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80725-5
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chage.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chage.matched is defined and find_chage.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_chage | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80725-5
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the chage rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_chage | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80725-5
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the chage rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_privileged_commands_chage | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_privileged_commands_chage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80725-5
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Set architecture for audit truncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_truncate
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_truncate.matched is defined and find_truncate.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_truncate.files | map(attribute=''path'') | list | first }}'
  when:
  - find_truncate.matched is defined and find_truncate.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the truncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the truncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the truncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the truncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_truncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_truncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80756-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit ftruncate tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_ftruncate
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_ftruncate.matched is defined and find_ftruncate.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_ftruncate.files | map(attribute=''path'') | list | first }}'
  when:
  - find_ftruncate.matched is defined and find_ftruncate.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the ftruncate rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the ftruncate rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the ftruncate rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the ftruncate rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_ftruncate | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_ftruncate
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80752-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Add unsuccessful file operations audit rules
  blockinfile:
    path: /etc/audit/rules.d/30-ospp-v42-remediation.rules
    create: true
    block: '## This content is a section of an Audit config snapshot recommended for Red Hat Enterprise Linux 8 systems that
      target OSPP compliance.

      ## The following content has been retreived on 2019-03-11 from: https://github.com/linux-audit/audit-userspace/blob/master/rules/30-ospp-v42.rules


      ## The purpose of these rules is to meet the requirements for Operating

      ## System Protection Profile (OSPP)v4.2. These rules depends on having

      ## 10-base-config.rules, 11-loginuid.rules, and 43-module-load.rules installed.


      ## Unsuccessful file creation (open with O_CREAT)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create

      -a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create


      ## Unsuccessful file modifications (open for write or truncate)

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b32 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification

      -a always,exit -F arch=b64 -S truncate,ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification


      ## Unsuccessful file access (any other opens) This has to go last.

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access

      -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -F auid>=1000 -F
      auid!=unset -F key=unsuccesful-access'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_unsuccessful_file_modification_creat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_creat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80751-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit open_by_handle_at tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open_by_handle_at
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open_by_handle_at.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open_by_handle_at.matched is defined and find_open_by_handle_at.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_unsuccessful_file_modification_open_by_handle_at | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open_by_handle_at
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80755-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit open tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_open
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_open.matched is defined and find_open.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_open.files | map(attribute=''path'') | list | first }}'
  when:
  - find_open.matched is defined and find_open.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the open rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_open | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_open
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80753-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Set architecture for audit openat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_openat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/access.rules
  when:
  - find_openat.matched is defined and find_openat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_openat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_openat.matched is defined and find_openat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the openat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the openat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: '{{ item }}'
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Inserts/replaces the openat rule in audit.rules when on x86_64
  lineinfile:
    line: '{{ item }}'
    state: present
    dest: /etc/audit/audit.rules
    create: true
  with_items:
  - -a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
  - -a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_unsuccessful_file_modification_openat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_unsuccessful_file_modification_openat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80754-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.4
  - PCI-DSS-Req-10.2.1

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/restorecon.*$
    patterns: '*.rules'
  register: find_restorecon
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_execution_restorecon | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_restorecon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80699-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_restorecon.matched is defined and find_restorecon.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_execution_restorecon | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_restorecon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80699-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_restorecon.files | map(attribute=''path'') | list | first }}'
  when:
  - find_restorecon.matched is defined and find_restorecon.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_execution_restorecon | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_restorecon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80699-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the restorecon rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_execution_restorecon | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_restorecon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80699-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the restorecon rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - audit_rules_execution_restorecon | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_restorecon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80699-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/setsebool.*$
    patterns: '*.rules'
  register: find_setsebool
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setsebool | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setsebool
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80701-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_setsebool.matched is defined and find_setsebool.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setsebool | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setsebool
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80701-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_setsebool.files | map(attribute=''path'') | list | first }}'
  when:
  - find_setsebool.matched is defined and find_setsebool.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setsebool | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setsebool
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80701-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the setsebool rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setsebool | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setsebool
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80701-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the setsebool rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - audit_rules_execution_setsebool | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_setsebool
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80701-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/bin/chcon.*$
    patterns: '*.rules'
  register: find_chcon
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_chcon | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_chcon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80698-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_chcon.matched is defined and find_chcon.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_chcon | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_chcon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80698-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chcon.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chcon.matched is defined and find_chcon.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_chcon | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_chcon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80698-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the chcon rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_chcon | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_chcon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80698-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the chcon rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_chcon | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_chcon
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80698-4
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*path=/usr/sbin/semanage.*$
    patterns: '*.rules'
  register: find_semanage
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_semanage | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_semanage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80700-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_semanage.matched is defined and find_semanage.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_semanage | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_semanage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80700-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_semanage.files | map(attribute=''path'') | list | first }}'
  when:
  - find_semanage.matched is defined and find_semanage.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_semanage | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_semanage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80700-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the semanage rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_semanage | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_semanage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80700-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Inserts/replaces the semanage rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=unset -F key=privileged
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - audit_rules_execution_semanage | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_execution_semanage
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80700-8
  - NIST-800-53-AC-2(4)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7

- name: Set architecture for audit removexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80696-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_removexattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80696-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_removexattr.matched is defined and find_removexattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80696-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_removexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_removexattr.matched is defined and find_removexattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80696-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the removexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80696-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the removexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80696-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80696-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_removexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_removexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80696-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit fremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80691-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fremovexattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80691-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fremovexattr.matched is defined and find_fremovexattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80691-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fremovexattr.matched is defined and find_fremovexattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80691-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80691-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80691-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80691-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80691-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit lsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80695-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lsetxattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80695-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_lsetxattr.matched is defined and find_lsetxattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80695-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lsetxattr.matched is defined and find_lsetxattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80695-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80695-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80695-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80695-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_lsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80695-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit setxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80697-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_setxattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80697-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_setxattr.matched is defined and find_setxattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80697-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_setxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_setxattr.matched is defined and find_setxattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80697-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the setxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80697-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the setxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80697-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80697-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_setxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_setxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80697-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit fchmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80687-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmod
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80687-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fchmod.matched is defined and find_fchmod.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80687-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchmod.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchmod.matched is defined and find_fchmod.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80687-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80687-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80687-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80687-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_fchmod | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80687-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit lremovexattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80694-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lremovexattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80694-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_lremovexattr.matched is defined and find_lremovexattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80694-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lremovexattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lremovexattr.matched is defined and find_lremovexattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80694-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80694-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80694-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80694-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lremovexattr | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lremovexattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80694-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit lchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80693-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_lchown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80693-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_lchown.matched is defined and find_lchown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80693-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lchown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lchown.matched is defined and find_lchown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80693-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80693-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80693-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80693-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the lchown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_dac_modification_lchown | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_lchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80693-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit chmod tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80685-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chmod
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80685-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_chmod.matched is defined and find_chmod.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80685-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chmod.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chmod.matched is defined and find_chmod.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80685-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chmod rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80685-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chmod rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80685-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80685-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chmod rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - audit_rules_dac_modification_chmod | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chmod
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80685-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit fchown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80689-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80689-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fchown.matched is defined and find_fchown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80689-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchown.matched is defined and find_fchown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80689-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80689-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80689-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80689-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80689-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit fchmodat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80688-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchmodat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80688-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fchmodat.matched is defined and find_fchmodat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80688-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchmodat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchmodat.matched is defined and find_fchmodat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80688-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmodat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80688-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80688-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80688-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_dac_modification_fchmodat | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchmodat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80688-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit fsetxattr tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80692-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fsetxattr
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80692-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fsetxattr.matched is defined and find_fsetxattr.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80692-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fsetxattr.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fsetxattr.matched is defined and find_fsetxattr.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80692-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80692-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80692-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80692-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fsetxattr | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fsetxattr
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80692-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit fchownat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80690-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_fchownat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80690-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_fchownat.matched is defined and find_fchownat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80690-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_fchownat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_fchownat.matched is defined and find_fchownat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80690-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchownat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80690-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchownat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80690-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80690-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_fchownat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_fchownat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80690-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit chown tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80686-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=perm_mod$
    patterns: '*.rules'
  register: find_chown
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80686-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_chown.matched is defined and find_chown.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80686-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_chown.files | map(attribute=''path'') | list | first }}'
  when:
  - find_chown.matched is defined and find_chown.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80686-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chown rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80686-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chown rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80686-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80686-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Inserts/replaces the chown rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=unset -F key=perm_mod
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_dac_modification_chown | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_dac_modification_chown
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80686-9
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.5.5
  - CJIS-5.4.1.1

- name: Set architecture for audit rename tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80703-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_rename
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80703-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_rename.matched is defined and find_rename.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80703-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_rename.files | map(attribute=''path'') | list | first }}'
  when:
  - find_rename.matched is defined and find_rename.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80703-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rename rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80703-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rename rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80703-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rename rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80703-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rename rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S rename -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_rename | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rename
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80703-2
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit renameat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80704-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_renameat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80704-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_renameat.matched is defined and find_renameat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80704-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_renameat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_renameat.matched is defined and find_renameat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80704-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the renameat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80704-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the renameat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80704-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the renameat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80704-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the renameat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S renameat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_file_deletion_events_renameat | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_renameat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80704-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit unlink tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80706-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_unlink
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80706-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_unlink.matched is defined and find_unlink.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80706-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unlink.files | map(attribute=''path'') | list | first }}'
  when:
  - find_unlink.matched is defined and find_unlink.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80706-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlink rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80706-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlink rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80706-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlink rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80706-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlink rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S unlink -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_file_deletion_events_unlink | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlink
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80706-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit rmdir tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80705-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_rmdir
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80705-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_rmdir.matched is defined and find_rmdir.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80705-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_rmdir.files | map(attribute=''path'') | list | first }}'
  when:
  - find_rmdir.matched is defined and find_rmdir.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80705-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rmdir rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80705-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rmdir rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80705-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rmdir rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80705-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the rmdir rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S rmdir -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_rmdir | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_rmdir
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80705-7
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit unlinkat tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80707-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for other DAC audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -F key=delete$
    patterns: '*.rules'
  register: find_unlinkat
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80707-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: If existing DAC ruleset not found, use /etc/audit/rules.d/delete.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/delete.rules
  when:
  - find_unlinkat.matched is defined and find_unlinkat.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80707-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_unlinkat.files | map(attribute=''path'') | list | first }}'
  when:
  - find_unlinkat.matched is defined and find_unlinkat.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80707-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlinkat rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80707-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlinkat rule in rules.d when on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80707-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlinkat rule in /etc/audit/audit.rules when on x86
  lineinfile:
    line: -a always,exit -F arch=b32 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80707-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the unlinkat rule in audit.rules when on x86_64
  lineinfile:
    line: -a always,exit -F arch=b64 -S unlinkat -F auid>=1000 -F auid!=unset -F key=delete
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_file_deletion_events_unlinkat | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_file_deletion_events_unlinkat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80707-3
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit init_module tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*init_module.*$
    patterns: '*.rules'
  register: find_init_module
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_init_module.matched is defined and find_init_module.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_init_module.files | map(attribute=''path'') | list | first }}'
  when:
  - find_init_module.matched is defined and find_init_module.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the init_module rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S init_module -k module-change
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the init_module rule in rules.d on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S init_module -k module-change
    state: present
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the init_module rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b32 -S init_module -k module-change
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the init_module rule in audit.rules when on x86_64
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b64 -S init_module -k module-change
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - audit_rules_kernel_module_loading_init | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_init
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80713-1
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit delete_module tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Search /etc/audit/rules.d for audit rule entries
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: ^.*delete_module.*$
    patterns: '*.rules'
  register: find_delete_module
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/privileged.rules
  when:
  - find_delete_module.matched is defined and find_delete_module.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_delete_module.files | map(attribute=''path'') | list | first }}'
  when:
  - find_delete_module.matched is defined and find_delete_module.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the delete_module rule in rules.d
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b32 -S delete_module -k module-change
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the delete_module rule in rules.d on x86_64
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -a always,exit -F arch=b64 -S delete_module -k module-change
    state: present
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the delete_module rule in audit.rules
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b32 -S delete_module -k module-change
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Inserts/replaces the delete_module rule in audit.rules when on x86_64
  lineinfile:
    path: /etc/audit/audit.rules
    line: -a always,exit -F arch=b64 -S delete_module -k module-change
    create: true
  when:
  - audit_arch is defined and audit_arch == 'b64'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_kernel_module_loading_delete | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_kernel_module_loading_delete
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80711-5
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.7

- name: Set architecture for audit faillock tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80718-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_faillock
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80718-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the
    rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/logins.rules
  when:
  - find_faillock.matched is defined and find_faillock.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80718-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_faillock.files | map(attribute=''path'') | list | first }}'
  when:
  - find_faillock.matched is defined and find_faillock.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80718-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Inserts/replaces the faillock rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/run/faillock -p wa -k logins
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80718-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Inserts/replaces the faillock rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/run/faillock -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_faillock | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_faillock
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80718-0
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Set architecture for audit lastlog tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80719-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_lastlog
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80719-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the
    rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/logins.rules
  when:
  - find_lastlog.matched is defined and find_lastlog.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80719-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_lastlog.files | map(attribute=''path'') | list | first }}'
  when:
  - find_lastlog.matched is defined and find_lastlog.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80719-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Inserts/replaces the lastlog rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/log/lastlog -p wa -k logins
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80719-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Inserts/replaces the lastlog rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/log/lastlog -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - audit_rules_login_events_lastlog | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_lastlog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80719-8
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Set architecture for audit tallylog tasks
  set_fact:
    audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80720-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Search /etc/audit/rules.d for other user/group modification audit rules
  find:
    paths: /etc/audit/rules.d
    recurse: false
    contains: -k logins$
    patterns: '*.rules'
  register: find_tallylog
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80720-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the
    rule
  set_fact:
    all_files:
    - /etc/audit/rules.d/logins.rules
  when:
  - find_tallylog.matched is defined and find_tallylog.matched == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80720-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Use matched file as the recipient for the rule
  set_fact:
    all_files:
    - '{{ find_tallylog.files | map(attribute=''path'') | list | first }}'
  when:
  - find_tallylog.matched is defined and find_tallylog.matched > 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80720-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Inserts/replaces the tallylog rule in rules.d when on x86
  lineinfile:
    path: '{{ all_files[0] }}'
    line: -w /var/log/tallylog -p wa -k logins
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80720-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: Inserts/replaces the tallylog rule in /etc/audit/audit.rules
  lineinfile:
    line: -w /var/log/tallylog -p wa -k logins
    state: present
    dest: /etc/audit/audit.rules
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - audit_rules_login_events_tallylog | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - audit_rules_login_events_tallylog
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-80720-6
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AC-6(9)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.7
  - PCI-DSS-Req-10.2.3

- name: enable syslog plugin
  lineinfile:
    dest: /etc/audit/plugins.d/syslog.conf
    regexp: ^active
    line: active = yes
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - auditd_audispd_syslog_plugin_activated | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_audispd_syslog_plugin_activated
  - medium_severity
  - configure_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80677-8
  - NIST-800-53-AU-4(1)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.5.3
  - CJIS-5.4.1.1

- name: Configure auditd Flush Priority
  lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: ^\s*flush\s*=\s*.*$
    line: flush = {{ var_auditd_flush }}
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - auditd_data_retention_flush | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_flush
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80680-2
  - NIST-800-53-AU-11
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.3.1

- name: Ensure rsh-server is removed
  package:
    name: rsh-server
    state: absent
  tags:
  - package_rsh-server_removed
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82184-3
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_complexity | bool
  - low_disruption | bool
  - high_severity | bool

- name: Disable service rlogin
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service rlogin
    systemd:
      name: rlogin.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"rlogin.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_rlogin_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rlogin_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80885-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - rlogin.socket
  command: systemctl list-unit-files rlogin.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_rlogin_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rlogin_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80885-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable socket rlogin
  systemd:
    name: rlogin.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"rlogin.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_rlogin_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rlogin_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80885-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable service rexec
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service rexec
    systemd:
      name: rexec.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"rexec.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rexec_disabled | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rexec_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80884-0
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - rexec.socket
  command: systemctl list-unit-files rexec.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rexec_disabled | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rexec_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80884-0
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable socket rexec
  systemd:
    name: rexec.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"rexec.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rexec_disabled | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rexec_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80884-0
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- block:
  - name: Detect shosts.equiv Files on the System
    find:
      paths: /
      recurse: true
      patterns: shosts.equiv
    check_mode: false
    register: shosts_equiv_locations
  - name: Remove Rsh Trust Files
    file:
      path: '{{ item.path }}'
      state: absent
    with_items: '{{ shosts_equiv_locations.files }}'
    when: shosts_equiv_locations
  tags:
  - no_rsh_trust_files
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80842-8
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - low_disruption | bool
  - no_rsh_trust_files | bool
  - low_complexity | bool

- name: Ensure talk-server is removed
  package:
    name: talk-server
    state: absent
  tags:
  - package_talk-server_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82180-1
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure talk is removed
  package:
    name: talk
    state: absent
  tags:
  - package_talk_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80848-5
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - package_talk_removed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure xinetd is removed
  package:
    name: xinetd
    state: absent
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_severity | bool
  - package_xinetd_removed | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_xinetd_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80850-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable service xinetd
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service xinetd
    systemd:
      name: xinetd.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"xinetd.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_xinetd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_xinetd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80888-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - xinetd.socket
  command: systemctl list-unit-files xinetd.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_xinetd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_xinetd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80888-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.7

- name: Disable socket xinetd
  systemd:
    name: xinetd.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"xinetd.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_xinetd_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_xinetd_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80888-1
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.4.7

- name: Ensure telnet is removed
  package:
    name: telnet
    state: absent
  tags:
  - package_telnet_removed
  - low_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80849-3
  - NIST-800-171-3.1.13
  when:
  - package_telnet_removed | bool
  - no_reboot_needed | bool
  - disable_strategy | bool
  - low_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure telnet-server is removed
  package:
    name: telnet-server
    state: absent
  tags:
  - package_telnet-server_removed
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82182-7
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - low_complexity | bool
  - low_disruption | bool
  - high_severity | bool

- name: Disable service telnet
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service telnet
    systemd:
      name: telnet.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"telnet.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_telnet_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_telnet_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80887-3
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Unit Socket Exists - telnet.socket
  command: systemctl list-unit-files telnet.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_telnet_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_telnet_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80887-3
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Disable socket telnet
  systemd:
    name: telnet.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"telnet.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_telnet_disabled | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_telnet_disabled
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80887-3
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.4.7

- name: Enable service crond
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service crond
    service:
      name: crond
      enabled: 'yes'
      state: started
    when:
    - '"cronie" in ansible_facts.packages'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - medium_severity | bool
  - service_crond_enabled | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_crond_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80875-8
  - NIST-800-53-CM-6(a)

- name: Disable service kdump
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service kdump
    systemd:
      name: kdump.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"kdump.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_kdump_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_kdump_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80878-2
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Unit Socket Exists - kdump.socket
  command: systemctl list-unit-files kdump.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_kdump_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_kdump_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80878-2
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable socket kdump
  systemd:
    name: kdump.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"kdump.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_kdump_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_kdump_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80878-2
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable service zebra
  block:
  - name: Gather the service facts
    service_facts: null
  - name: Disable service zebra
    systemd:
      name: zebra.service
      enabled: 'no'
      state: stopped
      masked: 'yes'
    when: '"zebra.service" in ansible_facts.services'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - service_zebra_disabled | bool
  - low_complexity | bool
  tags:
  - service_zebra_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80889-9
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Unit Socket Exists - zebra.socket
  command: systemctl list-unit-files zebra.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  check_mode: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - service_zebra_disabled | bool
  - low_complexity | bool
  tags:
  - service_zebra_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80889-9
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Disable socket zebra
  systemd:
    name: zebra.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"zebra.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - service_zebra_disabled | bool
  - low_complexity | bool
  tags:
  - service_zebra_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80889-9
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)

- name: Enable Use of Privilege Separation
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*UsePrivilegeSeparation\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: UsePrivilegeSeparation sandbox
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sshd_use_priv_separation | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_use_priv_separation
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80908-7
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-6
  - NIST-800-171-3.1.12

- name: Allow Only SSH Protocol 2
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Protocol\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: Protocol 2
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - sshd_allow_only_protocol2 | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_allow_only_protocol2
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80894-9
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-53-SC-13
  - NIST-800-53-MA-4(6)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.5.4
  - CJIS-5.5.6

- name: Disable SSH Access via Empty Passwords
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitEmptyPasswords\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PermitEmptyPasswords no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_disable_empty_passwords | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_empty_passwords
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80896-4
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - CJIS-5.5.6

- name: Disable Compression Or Set Compression to delayed
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Compression\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: Compression delayed
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_disable_compression | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_compression
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80895-6
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12

- name: Disable Kerberos Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*KerberosAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: KerberosAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_kerb_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_kerb_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80898-0
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12

- name: Disable Host-Based Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*HostbasedAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: HostbasedAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - disable_host_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - disable_host_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80786-7
  - NIST-800-53-AC-3
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12
  - CJIS-5.5.6

- name: Disable GSSAPI Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*GSSAPIAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: GSSAPIAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_gssapi_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_gssapi_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80897-2
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-171-3.1.12

- name: Do Not Allow SSH Environment Options
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitUserEnvironment\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PermitUserEnvironment no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_do_not_permit_user_env | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_do_not_permit_user_env
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80903-8
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12
  - CJIS-5.5.6

- name: Enable Use of Strict Mode Checking
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*StrictModes\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: StrictModes yes
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sshd_enable_strictmodes | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_enable_strictmodes
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80904-6
  - NIST-800-53-AC-6
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.12

- name: Set SSH Client Alive Max Count
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*ClientAliveCountMax\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: ClientAliveCountMax {{ var_sshd_set_keepalive }}
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_set_keepalive | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_set_keepalive
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80907-9
  - NIST-800-53-AC-2(5)
  - NIST-800-53-AC-12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-SC-10
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.11
  - CJIS-5.5.6

- name: Enable SSH Warning Banner
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Banner\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: Banner /etc/issue
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_enable_warning_banner | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_enable_warning_banner
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80905-3
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(c)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(a)
  - NIST-800-171-3.1.9
  - CJIS-5.5.6

- name: Disable SSH Root Login
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitRootLogin\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PermitRootLogin no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_root_login | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_root_login
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80901-2
  - NIST-800-53-AC-6(2)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-IA-2
  - NIST-800-53-IA-2(5)
  - NIST-800-53-CM-7(a)
  - NIST-800-53-CM-7(b)
  - NIST-800-53-CM-6(a)
  - NIST-800-53-
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - CJIS-5.5.6
